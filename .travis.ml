# Матрица построения теста (stage: test) создана для тестирования широкого диапазона
# конфигурации, а не один проход / сбой. Это помогает поймать сборку
# сбои и логические ошибки, которые присутствуют на платформах, отличных от
# Автор протестировал.
#
# Некоторые сборщики используют генератор зависимостей в `. / Depen` вместо использования
# apt-get для установки зависимостей сборки. Это гарантирует, что тестер
# использовать те же версии, что и в Gitian, поэтому результаты сборки практически идентичны
# к тому, что будет найдено в финальной версии.
#
# Чтобы избежать перестраивания всех зависимостей для каждой сборки, двоичные файлы
# кэшируются и повторно используются, когда это возможно. Изменения в генераторе зависимостей
# вызовет аннулирование кэша и при необходимости перестроит.
#
# Эти кэши могут быть удалены вручную при необходимости. Это один из самых
# несколько ручных операций, которые возможны с Travis, и это может быть сделано
# Участник Bitcoin Core GitHub через веб-интерфейс Travis [0].
#
# Travis CI загружает кеш после фазы сценария сборки [1].
# Тем не менее, сборка завершается без сохранения кэша, если он вступает во владение
# 50 минут [2]. Таким образом, если мы потратили слишком много времени на ранних этапах сборки, не получится
# с ошибкой и сохраните кеш.
#
# [0] https://travis-ci.org/bitcoin/bitcoin/caches
# [1] https://docs.travis-ci.com/user/caching/#build-phases
# [2] https://docs.travis-ci.com/user/customizing-the-build#build-timeouts

dist : xenial
ОС : Linux
язык : минимальный
арка : amd64
кеш :
  ccache : true
  каталоги :
    - $ TRAVIS_BUILD_DIR / зависит / построено
    - $ TRAVIS_BUILD_DIR / зависит от / sdk-sources
    - $ TRAVIS_BUILD_DIR / ci / scratch / .ccache
    # macOS
    - $ HOME / Библиотека / Тайники / Доморощенный
    - / usr / local / Homebrew
before_cache :
  - if ["$ {TRAVIS_OS_NAME}" = "osx"]; затем заварить зачистку; фи
этапы :
  - линт
  - тест
env :
  глобальный :
    - CI_RETRY_EXE = "travis_retry"
    - CI_WAIT = "во время сна 500; сделать эхо.; Сделано"
    - CACHE_ERR_MSG = "Ошибка! Начальная сборка прошла успешно, но осталось недостаточно времени для запуска последующих этапов сборки и тестов. См. Https://docs.travis-ci.com/user/customizing-the-build#build-timeouts. Пожалуйста, вручную перезапустите это задание, используя кнопку перезапуска travis. Следующий запуск не должен завершаться по тайм-ауту, потому что кэш сборки был сохранен. "
before_install :
  - установить -o errexit; источник ./ci/test/00_setup_env.sh
  - установить -o errexit; источник ./ci/test/03_before_install.sh
установить :
  - установить -o errexit; источник ./ci/test/04_install.sh
before_script :
  - установить -o errexit; источник ./ci/test/05_before_script.sh
сценарий :
  - экспорт ПРОДОЛЖИТЬ = 1
  - если [$ SECONDS -gt 1200]; затем экспортируйте CONTINUE = 0; fi   # Вероятно, сборка зависит очень долго
  - if [$ TRAVIS_REPO_SLUG = "биткойн / биткойн"]; затем экспортируйте CONTINUE = 1; fi   # Репозиторий в белом списке (время сборки 90 минут)
  - если [$ CONTINUE = "1"]; затем установите -o errexit; источник ./ci/test/06_script_a.sh; еще установить + o errexit; echo "$ CACHE_ERR_MSG"; ложный; фи
  - если [$ SECONDS -gt 2000]; затем экспортируйте CONTINUE = 0; fi   # Вероятно, сборка заняла очень много времени; Тесты занимают около 1000 с, поэтому мы должны прервать работу, если у нас осталось менее 50 * 60-1000 = 2000 с.
  - if [$ TRAVIS_REPO_SLUG = "биткойн / биткойн"]; затем экспортируйте CONTINUE = 1; fi   # Репозиторий в белом списке (время сборки 90 минут)
  - если [$ CONTINUE = "1"]; затем установите -o errexit; источник ./ci/test/06_script_b.sh; еще установить + o errexit; echo "$ CACHE_ERR_MSG"; ложный; фи
after_script :
  - эхо $ TRAVIS_COMMIT_RANGE
рабочие места :
  включают в себя :

    - этап : линт
      название : ' lint '
      env :
      кеш : ложь
      язык : питон
      python : ' 3.5 '  # Самая старая поддерживаемая версия в соответствии с doc / dependencies.md
      установить :
        - установить -o errexit; источник ./ci/lint/04_install.sh
      before_script :
        - установить -o errexit; источник ./ci/lint/05_before_script.sh
      сценарий :
        - установить -o errexit; источник ./ci/lint/06_script.sh

    - этап : тест
      имя : ' ARM [ЦЕЛЬ: установить] [бастер] [модульные тесты, функциональные тесты] '
      арка : arm64
      env : > -
        FILE_ENV = "./ Ки / тест / 00_setup_env_arm.sh"
        QEMU_USER_CMD = "" # Может запускать тесты без qemu
    - этап : тест
      имя : ' S390x [ЦЕЛЬ: установить] [бастер] [модульные тесты, функциональные тесты] '
      арка : s390x
      env : > -
        FILE_ENV = "./ Ки / тест / 00_setup_env_s390x.sh"
        QEMU_USER_CMD = "" # Может запускать тесты без qemu
    - этап : тест
      имя : ' Win64 [ЦЕЛЬ: развертывание] [модульные тесты, без графического интерфейса, без функциональных тестов] '
      env : > -
        FILE_ENV = "./ Ки / тест / 00_setup_env_win64.sh"
    - этап : тест
      Название : ' 32-бит + тир [ЦЕЛЬ: установить] [CentOS 7] [GUI] '
      env : > -
        FILE_ENV = "./ Ки / тест / 00_setup_env_i686_centos.sh"
    - этап : тест
      name : ' x86_64 Linux [ЦЕЛЬ: установить] [bionic] [использует пакет разработчика qt5 и некоторые зависимые пакеты] [unsigned char] '
      env : > -
        FILE_ENV = "./ Ки / тест / 00_setup_env_native_qt5.sh"
    - этап : тест
      имя : ' x86_64 Linux [ЦЕЛЬ: установить] [xenial] [не зависит, только системные библиотеки, дезинфицирующие средства: поток (TSan), без кошелька] '
      env : > -
        FILE_ENV = "./ Ки / тест / 00_setup_env_native_tsan.sh"
        TEST_RUNNER_EXTRA = "- exclude feature_block" # Недостаточно памяти на машинах travis
    - этап : тест
      имя : ' x86_64 Linux [ЦЕЛЬ: установить] [бионический] [не зависит, только системные библиотеки, дезинфицирующие средства: адрес / утечка (ASan + LSan) + неопределенный (UBSan) + целое число] '
      env : > -
        FILE_ENV = "./ Ки / тест / 00_setup_env_native_asan.sh"
    - этап : тест
      имя : ' x86_64 Linux [ЦЕЛЬ: установить] [бионический] [не зависит, только системные библиотеки, valgrind] '
      env : > -
        FILE_ENV = "./ Ки / тест / 00_setup_env_native_valgrind.sh"
    - этап : тест
      имя : ' x86_64 Linux [ЦЕЛЬ: установить] [бионический] [не зависит, только системные библиотеки, дезинфицирующие средства: фаззер, адрес, неопределенный] '
      env : > -
        FILE_ENV = "./ Ки / тест / 00_setup_env_native_fuzz.sh"
    - этап : тест
      имя : ' x86_64 Linux [ЦЕЛЬ: установить] [бионический] [без кошелька] '
      env : > -
        FILE_ENV = "./ Ки / тест / 00_setup_env_native_nowallet.sh"
    - этап : тест
      имя : ' macOS 10.12 [ЦЕЛЬ: развертывание] [без функциональных тестов] '
      env : > -
        FILE_ENV = "./ Ки / тест / 00_setup_env_mac.sh"
    - этап : тест
      имя : ' родной macOS 10.14 [ЦЕЛЬ: установить] [GUI] [не зависит] '
      os : osx
      # Используйте самую последнюю версию:
      # Xcode 11.2.1, macOS 10.14, JDK 13.0.1, SDK 10.15
      # https://docs.travis-ci.com/user/reference/osx/#macos-version
      osx_image : xcode11.2
      env : > -
        FILE_ENV = "./ Ки / тест / 00_setup_env_mac_host.sh"
