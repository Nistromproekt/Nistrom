версия : ' {branch}. {build} '
skip_tags : true
изображение : Visual Studio 2019
конфигурация : релиз
платформа : x64
clone_depth : 5
среда :
  APPVEYOR_SAVE_CACHE_ON_ERROR : верно
  CLCACHE_SERVER : 1
  PATH : ' C: \ Python37-x64; C: \ Python37-x64 \ Scripts;% PATH% '
  PYTHONUTF8 : 1
  QT_DOWNLOAD_URL : ' https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip '
  QT_DOWNLOAD_HASH : ' 9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21 '
  QT_LOCAL_PATH : ' C: \ Qt5.9.8_x64_static_vs2019 '
  VCPKG_INSTALL_PATH : ' C: \ tools \ vcpkg \ Установлен '
  VCPKG_COMMIT_ID : ' ed0df8ecc4ed7e755ea03e18aaf285fd9b4b4a74 '
кеш :
- C: \ tools \ vcpkg \ Установлено -> build_msvc \ vcpkg-packages.txt
- C: \ Users \ appveyor \ clcache -> .appveyor.yml, build_msvc \ **, ** \ Makefile.am, ** \ *. Vcxproj.in
- C: \ Qt5.9.8_x64_static_vs2019
установить :
- cmd : pip install --quiet git + https: //github.com/frerich/clcache.git@v4.2.0
# Отключите тест zmq на данный момент, поскольку библиотека python zmq в Windows иногда вызывает нарушение прав доступа.
# - cmd: pip install zmq
# Блок Powershell ниже предназначен для установки зависимостей c ++ через vcpkg. Псевдокод:
# 1. Проверьте, существует ли каталог установки vcpkg (обратите внимание, что обновление файла vcpkg-packages.txt
#     приведет к тому, что правила кэширования appveyor сделают каталог недействительным)
# 2. Если каталог отсутствует:
#     a. Извлеките источник vcpkg (включая файлы портов) для конкретной проверки и соберите двоичный файл vcpkg,
#     б. Установите недостающие пакеты.
- пс : |
      $ env: PACKAGES = Get-Content -Path build_msvc \ vcpkg-packages.txt
      Write-Host "Список vcpkg: $ env: ПАКЕТЫ"
      if (! (Test-Path -Path ($ env: VCPKG_INSTALL_PATH))) {
          cd c: \ tools \ vcpkg
          $ env: GIT_REDIRECT_STDERR = '2> & 1' # git записывает без ошибок в STDERR при выполнении git pull. Вместо этого отправьте в STDOUT.
          мастер происхождения git pull
          git checkout $ env: VCPKG_COMMIT_ID
          . \ Самозагрузки-vcpkg.bat
          Дополнительный контент "C: \ tools \ vcpkg \ triplets \ $ env: PLATFORM-windows-static.cmake" "set (VCPKG_BUILD_TYPE release)"
          . \ vcpkg install --triplet $ env: PLATFORM-windows-static $ env: PACKAGES.split ()> $ null
          cd "$ env: APPVEYOR_BUILD_FOLDER"
      }
      еще {
        Write-Host "необходимые пакеты vcpkg уже установлены."
      }
      c: \ tools \ vcpkg \ vcpkg интегрировать установку
before_build :
- ps :   clcache -M 536870912
# Блок Powershell ниже предназначен для загрузки и распаковки статических библиотек Qt. Псевдокод:
# 1. Если каталог назначения Qt существует, предположите, что он верен, и ничего не делайте. к
#     принудительная новая установка пакетов, удаляющих кеш приложения.
№ 2. В противном случае:
#     a. Загрузите zip-файл со встроенными статическими библиотеками Qt.
#     б. Убедитесь, что загруженный файл соответствует ожидаемому хешу.
#     c. Извлеките zip-файл в конкретный путь назначения, ожидаемый проектами msbuild.
- пс : |
      if (! (Test-Path -Path ($ env: QT_LOCAL_PATH))) {
        Write-Host "Загрузка бинарных файлов Qt.";
        Invoke-WebRequest -Uri $ env: QT_DOWNLOAD_URL -Out qtdownload.zip;
        Write-Host "Двоичные файлы Qt успешно загружены, проверка хеша на $ env: QT_DOWNLOAD_HASH ...";
        if ((Get-FileHash qtdownload.zip) .Hash -eq $ env: QT_DOWNLOAD_HASH) {
          Развернуть-Архив qtdownload.zip -DestinationPath $ env: QT_LOCAL_PATH;
          Write-Host "Загрузка двоичного файла Qt соответствует ожидаемому хешу.";
        }
        еще {
          Write-Host "ОШИБКА: бинарная загрузка Qt не соответствует ожидаемому хешу.";
          Exit-AppveyorBuild;
        }
      }
      еще {
         Write-Host "Бинарные файлы Qt уже присутствуют.";
      }
- cmd : python build_msvc \ msvc-autogen.py
- ps :   запуск-процесс clcache-server
- ps :   fsutil, установить поведение disablelastaccess 0 # Включить функцию времени доступа в Windows (для clcache)
build_script :
- cmd : msbuild / p: TrackFileAccess = false /p:CLToolExe=clcache.exe build_msvc \ bitcoin.sln / m / v: q / nologo
after_build :
- ps :   поведение fsutil установлено disablelastaccess 1 # Отключить функцию времени доступа в Windows (улучшенная производительность)
- ps :   clcache -z
# - 7z биткойн-% APPVEYOR_BUILD_VERSION% .zip% APPVEYOR_BUILD_FOLDER% \ build_msvc \% платформа% \% конфигурация% \ *. Exe
test_script :
- cmd : src \ test_bitcoin.exe -k стандартный вывод -e стандартный вывод 2> NUL
- cmd : src \ bench_bitcoin.exe -evals = 1 -scaling = 0> NUL
- ps :   тест python \ util \ bitcoin-util-test.py
- cmd : тест python \ util \ rpcauth-test.py
# Сбой теста оценки платы на устройстве с: WinError 10048] Обычно разрешено только одно использование каждого адреса сокета (протокол / сетевой адрес / порт).
- cmd : тест на питоне \ функционал \ test_runner.py --ci --quiet --combinedlogslen = 4000 - отказоустойчивый - исключить feature_fee_estima
артефакты :
# - путь: биткойн-% APPVEYOR_BUILD_VERSION% .zip
развернуть : выкл
