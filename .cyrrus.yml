задача :
  имя : " FreeBsd 12.0 amd64 [ЦЕЛЬ: установить] [не зависит, только системные библиотеки] "
  freebsd_instance :
    изображение : freebsd-12-0-release-amd64
    процессор : 8
    память : 8G
  время ожидания : 60м
  env :
    MAKEJOBS : " -j9 "
    CONFIGURE_OPTS : " --disable-зависимость-отслеживание "
    ЦЕЛЬ : « установить »
    TEST_RUNNER_PORT_MIN : " 14000 "   # Должно быть больше, чем 12321, который используется для кэша http. См. Https://cirrus-ci.org/guide/writing-tasks/#http-cache.
    CCACHE_SIZE : " 200 млн. "
    CCACHE_COMPRESS : 1
    CCACHE_DIR : " / tmp / ccache_dir "
  ccache_cache :
    папка : " / tmp / ccache_dir "
  install_script :
    - pkg install -y autoconf automake boost-libs git gmake libevent libtool pkgconf python3 ccache
    - ./contrib/install_db4.sh $ (pwd)
    - ccache --max-size = $ {CCACHE_SIZE}
  configure_script :
    - ./autogen.sh
    - ./configure $ {CONFIGURE_OPTS} BDB_LIBS = "- L $ (pwd) / db4 / lib -ldb_cxx-4.8" BDB_CFLAGS = "- I $ (pwd) / db4 / include" || (cat config.log && false)
  make_script :
    - gmake $ {MAKEJOBS} $ {GOAL} || (echo "Ошибка сборки. Подробная сборка следует." && gmake $ {GOAL} V = 1; false)
  check_script :
    - gmake check $ {MAKEJOBS} VERBOSE = 1
  function_test_script :
    - ./test/functional/test_runner.py --jobs 9 --ci --extended --exclude feature_dbcrash --combinedlogslen = 1000 --quiet --failfast
задача :
  имя : " x86_64 Linux [ЦЕЛЬ: установить] [бионический] [Использование ./ci/ system] "
  контейнер :
    изображение : Ubuntu: 18.04
    процессор : 8
    память : 8G
  время ожидания : 60м
  env :
    MAKEJOBS : " -j9 "
    RUN_CI_ON_HOST : " 1 "
    TEST_RUNNER_PORT_MIN : " 14000 "   # Должно быть больше, чем 12321, который используется для кэша http. См. Https://cirrus-ci.org/guide/writing-tasks/#http-cache.
    CCACHE_SIZE : " 200 млн. "
    CCACHE_DIR : " / tmp / ccache_dir "
  ccache_cache :
    папка : " / tmp / ccache_dir "
  depen_built_cache :
    папка : " / tmp / cirrus-ci-build / зависит / построено "
  install_script :
    - apt-get update
    - apt-get -y установить git bash ccache
    - ccache --max-size = $ {CCACHE_SIZE}
  ci_script :
    - ./ci/test_run_all.sh
